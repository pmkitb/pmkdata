---

# Clone, configure and deploy app

- name: Clone app repository
  git:
    repo: "{{ app_repository }}"
    dest: "{{ app_directory }}"
    update: yes
  notify: Restart pmkdata Gunicorn
  tags: deploy

- name: Install app dependencies
  command: "pipenv install --deploy"
  args:
    chdir: "{{ app_directory }}"
  environment:
    PIPENV_VENV_IN_PROJECT: "true"
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  notify: Restart pmkdata Gunicorn
  tags: deploy

- name: Set up app environment variables
  template:
    src: pmkdata.env
    dest: "{{ app_directory }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: 0644
  notify: Restart pmkdata Gunicorn
  tags: deploy

- name: Migrate database
  command: "pipenv run python manage.py migrate --no-input"
  args:
    chdir: "{{ app_directory }}"
  environment:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  tags: deploy

- name: Collect static files
  command: "pipenv run python manage.py collectstatic --no-input"
  args:
    chdir: "{{ app_directory }}"
  environment:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  notify: Restart pmkdata Gunicorn
  tags: deploy

# We assume that Gunicorn is already installed as a Pipenv dependency

- name: Copy Gunicorn socket config
  become: yes
  template:
    src: pmkdata.socket
    dest: /etc/systemd/system/pmkdata.socket
    owner: root
    group: root
    mode: 0644
  notify: Restart pmkdata Gunicorn
  tags: deploy

- name: Copy Gunicorn service config
  become: yes
  template:
    src: pmkdata.service
    dest: /etc/systemd/system/pmkdata.service
    owner: root
    group: root
    mode: 0644
  notify: Restart pmkdata Gunicorn
  tags: deploy

- name: Enable and start pmkdata Gunicorn service
  become: yes
  systemd:
    name: pmkdata
    enabled: yes
    state: started
  tags: deploy
