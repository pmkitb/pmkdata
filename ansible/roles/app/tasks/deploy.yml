---

# Clone, configure and deploy app

- name: Add the app repository deploy key
  copy:
    content: "{{ app_repository_deploy_key }}"
    dest: ~{{ app_user }}/.ssh/app_repository_deploy_key
  when: app_repository_deploy_key is defined

- name: Set permissions for the app repository deploy key file
  file:
    dest: ~{{ app_user }}/.ssh/app_repository_deploy_key
    mode: 0600
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
  when: app_repository_deploy_key is defined

- name: Clone app repository (without deploy key)
  git:
    repo: "{{ app_repository }}"
    dest: "{{ app_directory }}"
    accept_hostkey: yes
    update: yes
  notify: Restart app Gunicorn
  tags: deploy
  when: app_repository_deploy_key is not defined

- name: Clone app repository (with deploy key)
  git:
    repo: "{{ app_repository }}"
    dest: "{{ app_directory }}"
    accept_hostkey: yes
    update: yes
    key_file: ~{{ app_user }}/.ssh/app_repository_deploy_key
  notify: Restart app Gunicorn
  tags: deploy
  when: app_repository_deploy_key is defined

# Deploy backend

- name: Install app backend dependencies
  command: "pipenv install --deploy"
  args:
    chdir: "{{ app_directory }}"
  environment:
    PIPENV_VENV_IN_PROJECT: "true"
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  notify: Restart app Gunicorn
  tags:
    - deploy
    - backend

- name: Set up app backend environment variables
  template:
    src: env_backend.j2
    dest: "{{ app_directory }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: 0644
  notify: Restart app Gunicorn
  tags:
    - deploy
    - backend

- name: Migrate database
  command: "pipenv run python manage.py migrate --no-input"
  args:
    chdir: "{{ app_directory }}"
  environment:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  tags:
    - deploy
    - backend
    - migrate_db

- name: Collect backend static files
  command: "pipenv run python manage.py collectstatic --no-input"
  args:
    chdir: "{{ app_directory }}"
  environment:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
  notify:
    - Restart app Gunicorn
    - Reload Nginx
  tags:
    - deploy
    - backend

- name: Copy app Gunicorn socket config
  become: yes
  template:
    src: systemd_app_socket.j2
    dest: /etc/systemd/system/{{ app_name }}.socket
    owner: root
    group: root
    mode: 0644
  notify: Restart app Gunicorn
  tags:
    - deploy
    - backend

- name: Copy Gunicorn service config
  become: yes
  template:
    src: systemd_app_service.j2
    dest: "/etc/systemd/system/{{ app_name }}.service"
    owner: root
    group: root
    mode: 0644
  notify: Restart app Gunicorn
  tags:
    - deploy
    - backend

- name: Enable and start app Gunicorn service
  become: yes
  systemd:
    name: "{{ app_name }}"
    enabled: yes
  notify: Restart app Gunicorn
  tags:
    - deploy
    - backend
